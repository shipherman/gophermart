// Code generated by ent, DO NOT EDIT.

package withdrawals

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the withdrawals type in the database.
	Label = "withdrawals"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldOrder holds the string denoting the order field in the database.
	FieldOrder = "order"
	// FieldSum holds the string denoting the sum field in the database.
	FieldSum = "sum"
	// Table holds the table name of the withdrawals in the database.
	Table = "withdrawals"
)

// Columns holds all SQL columns for withdrawals fields.
var Columns = []string{
	FieldID,
	FieldOrder,
	FieldSum,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// OrderValidator is a validator for the "order" field. It is called by the builders before save.
	OrderValidator func(string) error
	// SumValidator is a validator for the "sum" field. It is called by the builders before save.
	SumValidator func(string) error
)

// OrderOption defines the ordering options for the Withdrawals queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByOrder orders the results by the order field.
func ByOrder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOrder, opts...).ToFunc()
}

// BySum orders the results by the sum field.
func BySum(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSum, opts...).ToFunc()
}
